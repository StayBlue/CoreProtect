name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        run: mvn -B verify

  release-nightly:
    name: Release Nightly Build
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Update projectBranch in build.gradle
        run: |
          # Replace the empty projectBranch with 'development'
          sed -i 's/String projectBranch = \x27\x27/String projectBranch = \x27development\x27/' build.gradle
          # Verify the change
          grep "projectBranch" build.gradle
      - name: Generate build timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Build with Maven
        run: mvn -B package
      - name: Find JAR file
        id: find_jar
        run: |
          JAR_PATH=$(find ./target -name "CoreProtect-*.jar" -not -name "*-shaded.jar" | head -n 1)
          echo "jar_path=$JAR_PATH" >> $GITHUB_ENV
          echo "jar_name=$(basename $JAR_PATH)" >> $GITHUB_ENV
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly-${{ env.timestamp }}
          name: Nightly Build ${{ env.timestamp }}
          draft: false
          prerelease: true
          files: ${{ env.jar_path }}
          token: ${{ secrets.GITHUB_TOKEN }}
